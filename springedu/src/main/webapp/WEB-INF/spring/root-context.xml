<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<context:property-placeholder location="classpath:config/database.properties"/>
	<!-- db연동 설정 -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName" value="${db.driverClass}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />	
	</bean>
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg ref="dataSource"/>
	</bean>
	
	<!-- mybatis-spring 시작 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	<property name="dataSource" ref="dataSource"/>
	<property name="configLocation" value="classpath:/config/mybatis-config.xml"/>
	<property name="mapperLocations" value="classpath:/mappers/**/*mapper.xml"/>
	</bean>
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
	<constructor-arg ref="sqlSessionFactory"/>
	</bean>
	<!-- mybatis-spring 끝 -->
	
	<!-- 트랜잭션 설정 -->
	<bean id="transactionManager"
				class="org.springframework.jdbc.datasource.DataSourceTransactionManager" >
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<!-- @Transaction 어노테이션을 찾아서 트랜잭션 관리해줌 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	

	
	<!-- @component : @Controller, @Service, @Repository 중에서
	                 @Controller를 제외한 클래스만 인스턴스화 하도록 설정함 -->
	<context:component-scan base-package="com.kh.portfolio">
		<context:exclude-filter type="annotation" 
		                        expression="org.springframework.stereotype.Controller"/>												
	</context:component-scan>		
	
		<!-- @Aspect가 적용된 클래스를 자동으로 실행시점에 타겟(핵심기능)에 위빙(삽입과장)하는 설정 -->
	<aop:aspectj-autoproxy/>	
</beans>







